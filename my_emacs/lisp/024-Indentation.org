* Indentation

#+begin_src emacs-lisp
;;* 24 (info "(emacs)Indentation")

(leuven--chapter leuven-load-chapter-24-indentation "24 Indentation"
#+end_src

** Indentation Commands

- ~M-m~ ::
     ~back-to-indentation~.

- ~C-M-\~ ::
     Run the command ~indent-region~ (which does the job of the imaginary command
     ~unsuck-html-layout~ in ~html-mode~).

#+begin_src emacs-lisp
;;** 24.1 (info "(emacs)Indentation Commands") and Techniques

  (leuven--section "24.1 (emacs)Indentation Commands and Techniques")

  (defun leuven-indent-buffer ()
    "Indent each non-blank line in the buffer."
    (interactive)
    (save-excursion
      (indent-region (point-min) (point-max) nil)))
#+end_src

*Code alignment* (align declarations).

#+begin_src emacs-lisp
  (defun leuven-align-code (begin end)
    "Align region to equal signs and colons."
    (interactive "r")
    ;; Keep them separate align calls, otherwise colons align with spaces if
    ;; they're in the same region.
    (align-regexp begin end "\\(\\s-*\\)=" 1 1)
    (align-regexp begin end "\\(\\s-*\\):" 1 1))

  ;; Align your code in a pretty way.
  (global-set-key (kbd "C-x \\") #'leuven-align-code)
  (global-set-key (kbd "C-c =")  #'leuven-align-code)
#+end_src

For example,

#+begin_example
var first = 3,
    second = "oh my god!",
    last = "but not least";
#+end_example

gets reindented like this:

#+begin_example
var first  = 3,
    second = "oh my god!",
    last   = "but not least";
#+end_example

#+begin_tip
For *filling code* (*pretty-format*'ting it, auto-inserting newlines, indents,
etc.), see ~uncrustify~.
#+end_tip

#+begin_src emacs-lisp
  ;; Show vertical lines to guide indentation.
  (use-package indent-guide ; Display problems with CrossMapIntegration.java
	:load-path "site-lisp"
	:config
	;; Enable indent-guide-mode automatically.
	(add-hook 'prog-mode-hook #'indent-guide-mode)
	;; Character used as vertical line.
	(setq indent-guide-char
		  (cond ((char-displayable-p ?\u254E) "╎")
				((char-displayable-p ?\u2502) "│")
				(t ":")))
	(diminish 'indent-guide-mode))
#+end_src

*************** TODO Look at the `dtrt-indent' package
*************** END

** Tabs vs. Spaces

Don't tabify.  Instead, _reindent_ everything, e.g. with ~C-M-\~.

#+begin_src emacs-lisp
;;** 24.3 TABs vs. (info "(emacs)Just Spaces")

  (leuven--section "24.3 TABs vs. (emacs)Just Spaces")

  ;; Indentation can't insert TABs.
  (setq-default indent-tabs-mode nil)
#+end_src

** Convenience Features for Indentation

#+begin_src emacs-lisp
  ;; (setq tab-always-indent 'complete)
#+end_src

#+begin_src emacs-lisp
)                                       ; Chapter 24 ends here.
#+end_src

